!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).Chivatu=t()}(this,(function(){"use strict";class e{constructor(t={}){return e.instance?e.instance:(e.instance=this,this.config=[],this.observer,this.options=Object.assign({threshold:[0,1]},t),this.isSupported()&&(this.observer=new IntersectionObserver(e=>{e.forEach(e=>{console.log(e.target.offsetTop),console.log(e.isIntersecting),e.isIntersecting?this._loadElement(e.target,e.intersectionRatio):this._unloadElement(e.target)})},this.options)),this)}isSupported(){return"IntersectionObserver"in window}add(e){const{selector:t}=e;this.config.push(e),document.querySelectorAll(t).forEach(e=>this.observer.observe(e))}_loadElement(e,t){for(let o of this.config){let{selector:n,once:s,onVisible:i}=o;e.matches(n)&&("function"==typeof i&&i(e,t),s&&this.observer.unobserve(e))}}_unloadElement(e){for(let t of this.config){let{selector:o,onHidden:n}=t;e.matches(o)&&"function"==typeof n&&n(e)}}}return e}));
